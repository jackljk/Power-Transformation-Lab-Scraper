# Wikipedia Extraction Profile
# --------------------------

# name for profile (For nicer identification in logs/results) Keep lowercase and use underscores/dashes
name: "sports_example"

scraper:
  # URL to scrape
  url: "https://www.wikipedia.org/"
  
  # Information to extract
  prompt: 
    task_template: "tabular_extraction"
    context:
      website: "Wikipedia"
      data_category: "Men's Track and Field 100m Olympic Gold Medals in the Past 50 Years"
      data_points: |-
        The table should include the following columns: 
        1. Year
        2. Country
        3. Athlete
        4. Time
        5. Venue
        6. Date
        7. Event
      no_pages: null # use 'all' to scrape all pages
      filters: null

  
  # Additional context to help with scraping
  additional_context:
    format: "text"
    value: |-
      Search and look only for data from the Olympic Games.

  initial_actions:
    # - go_to_url: "https://en.wikipedia.org/wiki/Apple"
    # - scroll_down: 4000
    # - go_to_url: "https://en.wikipedia.org/wiki/List_of_Academy_Award%E2%80%93winning_films"

content_structure:
  Athletes:
    year: int
    country: str
    athlete: str
    time: str
    venue: str
    date: str
    event: str

########################################################################
# Optional: Specify the content structure for the scraper to use
# content_structure:
#   <content_type>:
#     <field_name>: <data_type>
#     <field_name>: <data_type>
#
# Example
# content_structure:
#   Film:
#     title: str
#     nominations: int
#     awards_won: int
#     best_picture: bool  # True if the film won the best picture award, False otherwise
#########################################################################
# Avalible Actions
# - scroll_down: <pixels>  # Scroll down the page by a specified number of pixels
# - scroll_up: <pixels>    # Scroll up the page by a specified number of pixels
# - go_to_url: <url>  # Navigate to a specific URL