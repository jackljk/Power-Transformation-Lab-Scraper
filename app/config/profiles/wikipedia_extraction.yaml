# Wikipedia Extraction Profile
# --------------------------

# name for profile (For nicer identification in logs/results) Keep lowercase and use underscores/dashes
name: "wikipedia_extraction"

scraper:
  # URL to scrape
  url: "https://en.wikipedia.org/wiki/List_of_Academy_Award%E2%80%93winning_films"
  
  # Information to extract
  prompt: 
    task_template: "default"
    text: "Extract the list of all nominees for Academy Award best picture for films produced in 2015 from the Wikipedia page. Get the title of the film, the number of nominations, and the number of awards won. Also, indicate if the film won the best picture award."
  
  # Additional context to help with scraping
  context:
    format: "text"
    value: null
  
  # Task template to use
  task_template: "default"

  initial_actions:
    - scroll_down: 4000
    # - go_to_url: "https://en.wikipedia.org/wiki/Apple"
    # - scroll_down: 4000
    # - go_to_url: "https://en.wikipedia.org/wiki/List_of_Academy_Award%E2%80%93winning_films"

content_structure:
  Film:
    title: str
    nominations: int
    awards_won: int
    index: int
    best_picture: bool


########################################################################
# Optional: Specify the content structure for the scraper to use
# content_structure:
#   <content_type>:
#     <field_name>: <data_type>
#     <field_name>: <data_type>
#
# Example
# content_structure:
#   Film:
#     title: str
#     nominations: int
#     awards_won: int
#     best_picture: bool  # True if the film won the best picture award, False otherwise
#########################################################################
# Avalible Actions
# - scroll_down: <pixels>  # Scroll down the page by a specified number of pixels
# - scroll_up: <pixels>    # Scroll up the page by a specified number of pixels
# - go_to_url: <url>  # Navigate to a specific URL