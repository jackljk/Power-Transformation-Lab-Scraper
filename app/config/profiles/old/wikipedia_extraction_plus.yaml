# Wikipedia Extraction Profile
# --------------------------

# name for profile (For nicer identification in logs/results) Keep lowercase and use underscores/dashes
name: "wikipedia_extraction"

scraper:
  # URL to scrape
  url: "https://en.wikipedia.org/wiki/List_of_Academy_Award%E2%80%93winning_films"
  
  # Information to extract
  prompt: 
    task_template: "default"
    text: "Extract the list of all nominees for Academy Award best picture for films produced in 2015 and 2016 from the Wikipedia page."
  
  # Additional context to help with scraping
  context:
    format: "text"
    value: "Extract the Number of Nominations, Number of awards each film won and give the film that won the best picture award a value to represent that it won best picture"
  
  # Task template to use
  task_template: "default"

  initial_actions:
    - scroll_down: 4000
    # - go_to_url: "https://en.wikipedia.org/wiki/Apple"
    # - scroll_down: 4000
    # - go_to_url: "https://en.wikipedia.org/wiki/List_of_Academy_Award%E2%80%93winning_films"

content_structure:
  Film:
    title: str
    nominations: int
    awards_won: int
    index: int
    best_picture: bool


########################################################################
# Optional: Specify the content structure for the scraper to use
# content_structure:
#   <content_type>:
#     <field_name>: <data_type>
#     <field_name>: <data_type>
#
# Example
# content_structure:
#   Film:
#     title: str
#     nominations: int
#     awards_won: int
#     best_picture: bool  # True if the film won the best picture award, False otherwise
#########################################################################
# Avalible Actions
# - scroll_down: <pixels>  # Scroll down the page by a specified number of pixels
# - scroll_up: <pixels>    # Scroll up the page by a specified number of pixels
# - go_to_url: <url>  # Navigate to a specific URL